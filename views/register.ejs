<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>회원가입</title>

  <style>
    body {
      background-color: rgb(26, 31, 39);
      color: white;
    }

    form {
      margin: 0 auto;
      width: 650px;
    }

    .register-div div {
      text-align: center;
      font-size: 25px;
      padding-bottom: 30px;
    }

    .register-form .form-required {
      text-align: right;
      margin: 0 auto;
    }

    .register-form fieldset {
      border: 0;
      padding: 10px;
    }

    .register-form .form-div {
      display: flex;
      padding: 5px;
      margin: 10px 20px;
    }

    .register-form .form-item {
      width: 130px;
      padding: 5px;
    }

    .register-form input {
      width: 350px;
      margin-right: 10px;
      height: 40px;
      border: 1px solid rgb(221, 221, 221);
      border-radius: 4px;
      padding: 0px 11px 0px 15px;
      background-color: transparent;
      color: white;
    }

    .register-form .check-btn,
    .profile-box label,
    .profile-box button {
      width: 80px;
      height: 36px;
      border-radius: 4px;
      border: 1px solid gray;
    }

    .register-form .form-div-btn {
      display: flex;
      justify-content: center;
    }

    .register-form .guide {
      font-size: 13px;
      color: skyblue;
      padding: 10px 0;
      margin: 0;
    }

    #dynamicFile {
      display: none;
    }

    #preview {
      /* background-image: url('/static/img/profileBasic.png'); */
      background-size: 170px;
      width: 170px;
      height: 170px;
      border-radius: 50%;
      border: 1px solid gray;
      color: transparent;
      margin-bottom: 10px;
    }

    form input::file-selector-button {
      display: none;
    }

    .profile-box input[type="file"] {
      padding: 0;
    }

    .profile-box label{ 
      display: inline-block;
      background-color: gainsboro;
      color: black;
      cursor: pointer;
      width: 90px;
      font-size: 14px;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 5px 0 5px;
    }
    
    .profile-img {
      width: 170px;
      height: 170px;
      border-radius: 50%;
      border: 1px solid gray;
    }

    .profile-div {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .back-main {
      height: 50px;
      padding-left: 20px;
      display: flex;
      align-items: center;
    }

    .back-main a {
      color: white;
      text-decoration: none;
    }

    .profile-div .profile-save-btn {
      display: none;
    }

  </style>
  <!-- axios CDN -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <!-- 다음주소검색 api -->
  <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
</head>

<body>
  <div class="back-main">
    <a href="/">뒤로가기</a>
  </div>
  <form class="register-form" name="register-form">
    <div class="register-div">
      <div>모임에 참여해볼까요?</div>
    </div>
    <fieldset>
      <div class="profile-box form-div">
        <p class="form-item">프로필 사진</p>
        <div class="profile-div">
          <!-- <img class="profile-img" src="/static/img/profileBasic.png"> -->
          <img id="preview" src="../static/img/profileBasic.png">
          <input type="file" name="dynamicFile" id="dynamicFile" onchange="readURL(this);">
            <label for="dynamicFile">프로필 편집</label>
            <button class="profile-save-btn" type="button" onclick="fileUpload();">저장</button>
        </div>
        </div>
      </div>

      <div class="form-div">
        <label for="userid" class="form-item">아이디</label>
        <div class="form-guide">
          <input type="text" name="userid" id="userid" placeholder="아이디를 입력해주세요" required onkeyup="idInputCheck(this, 10);">
          <p class="guide-id guide"></p>
        </div>
        <button type="button" class="check-btn">중복확인</button>
      </div>

      <div class="form-div">
        <label for="pw" class="form-item">비밀번호</label>
        <input type="password" name="pw" id="pw" placeholder="비밀번호를 입력해주세요" required onkeyup="checkPw(this);">
      </div>

      <div class="form-div">
        <label for="pw" class="form-item">비밀번호 확인</label>
        <div class="form-guide">
          <input type="password" id="pw-confirm" placeholder="비밀번호를 한번 더 입력해주세요" required onkeyup="checkPw(this);">
          <p class="guide-pw guide"></p>
        </div>
      </div>

      <div class="form-div">
        <label for="nickname" class="form-item">닉네임</label>
        <input type="text" name="nickname" id="nickname" required onkeyup="charCheck(this, max);">
        <button type="button" class="check-btn">중복확인</button>
      </div>

      <div class="form-div">
        <label for="address" class="form-item">주소</label>
        <!-- <input type="text" name="address" id="address" required> -->


        <!-- <input id="member_post"  type="text" placeholder="Zip Code" readonly onclick="findAddr()"> -->
        <input id="address" name="address" type="text" placeholder="Address" readonly > <br>
        <button type="button" class="check-btn" onclick="findAddr()">주소검색</button>
        <!-- <input type="text" placeholder="Detailed Address"> -->
      </div>
      <br>

      <div class="form-div-btn">
        <!-- 버튼 타입 button submit? -->
        <button type="submit" onclick="register();" class="check-btn">가입하기</button>
      </div>
    </fieldset>
  </form>

  <script>
    let useridInput = document.querySelector('#userid');
    let pwInput = document.querySelector('#pw');
    let pwConfirm = document.querySelector('#pw-confirm');
    let useridGuide = document.querySelector('.guide-id');
    let userpwGuide = document.querySelector('.guide-pw');

    function charCheck(obj) {
      // 특수문자 판별
      var specialChar = /[ \{\}\[\]\/?.,;:|\)*~`!^\-_+┼<>@\#$%&\'\"\\\(\=]/gi;

      // 배열에서 하나씩 값을 비교
      if (specialChar.test(obj.value)) {
        // 값이 일치하면 문자를 삭제
        obj.value = obj.value.substring(0, obj.value.length - 1);
      }
    };

    // maxlength 넘었을 때 텍스트를 잘라서 value값에 넣어줌
    function handleInputLength(el, max) {
      if (el.value.length > max) {
        el.value = el.value.substr(0, max);
      }
    };

    function idInputCheck(obj, max) {
      charCheck(obj);
      handleInputLength(obj, max);
      
      // 조건을 만족하지 않으면 가이드 보임 
      if (useridInput.value.length = 0 || useridInput.value.length < 3) {
        useridGuide.innerText = '아이디는 3 - 10자로 만들어주세요'
        // 6자 이상 16자 이하로 특수문자 제외
      } else {
        useridGuide.innerText = ''
      }
    };

    function fileUpload() {
      console.log('click fileUpload')

      // 멀티미디어 데이터는 비동기 데이터를 보여줄 때 폼 데이터를 만들어서 함
      const formData = new FormData(); // 폼 객체 생성
      const file = document.getElementById('dynamicFile'); // file input

      console.dir(file.files[0]); // 파일 input에 들어간 파일 정보

      // formData.append(name, value);
      // input의 name과 input의 value
      formData.append('dynamicFile', file.files[0])
      
      // axios 통신
      axios({
        method: 'POST',
        url: '/dynamicFile',
        data: formData,
        headers: {
          'Content-Type': 'multipart/form-data', // enctype: "multipart/form-data"
        },
      }).then(function(res) {
        // res : 클라이언트의 POST /dynamicFile 요청을 보낸 응답 결과
        document.getElementById('dynamicFile').style.backgroundImage = `url(/uploads/${res.data.filename})`
        alert('프로필 저장이 완료되었어요!')
      })
    }

    // 이미지 미리보기
    function readURL(input) {
      if (input.files[0]) {
        let reader = new FileReader();
        reader.onload = function(obj) {
          document.getElementById('preview').src = obj.target.result;
          console.log('obj.target.result >>>>>> ', e.target.result)
        };
        reader.readAsDataURL(input.files[0]);
      } else {
        document.getElementById('preview').src = "/static/img/profileBasic.png";
      }
      document.querySelector('.profile-save-btn').style.display = 'block'

    }

    // 비밀번호 확인
    function checkPw() {
      console.log(pwInput.value)
      console.log(pwConfirm.value)
      if (pwInput.value != pwConfirm.value){
        userpwGuide.innerText = '비밀번호를 확인해주세요'
      } else {
        userpwGuide.innerText = ''
      }
    };

    // 주소찾기 
    function findAddr() {
      new daum.Postcode({
        oncomplete: function(data) {

          console.log(data);

          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.
          // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
          var roadAddr = data.roadAddress; // 도로명 주소 변수
          var jibunAddr = data.jibunAddress; // 지번 주소 변수
          // 우편번호와 주소 정보를 해당 필드에 넣는다.
          // document.getElementById('member_post').value = data.zonecode;
          if (roadAddr !== '') {
            document.getElementById("address").value = roadAddr;
          } else if (jibunAddr !== '') {
            document.getElementById("address").value = jibunAddr;
          }
        }
      }).open();
    }

    function register() {
      const form = document.forms['register-form'];
      console.log(form)
      if (form.userid.value == '' || form.pw.value == '' || form.nickname.value == '' || form.address.value == ''){
        return alert('값을 입력해주세요')}
 
      axios({
          method: 'POST',
          url: '/signup',
          data: {
            profile: document.querySelector('img').src,
            userid: form.userid.value,
            pw: form.pw.value,
            nickname: form.nickname.value,
            address: form.address.value,
          },
        })
        .then((res) => {
          console.log(res);
          console.log(res.data);
          return res.data;
        })
        .then((data) => {
          // (1) alert 띄우기
          alert('회원이 되신 것을 축하해요!');
          // (2) 가입 성공시 로그인 페이지로 이동
          // document.location.href란?
          // javascript에서 페이지 이동할 수 있는 방법
          // document 객체를 사용하기 때문에 프론트에서 사용 가능
          document.location.href = '/login';
        });
    }
  </script>
</body>

</html>