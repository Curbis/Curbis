<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>회원가입</title>
  
  <style>

    form {
      margin: 0 auto;    
      width: 650px;  
    }

    .register-div div {
      text-align: center;
      font-size: 25px;
    }

    .register-form .form-required {
      text-align: right;
      margin: 0 auto;      
    }

    .register-form fieldset {
      border: 0;
      padding: 10px;
    }

    .register-form .form-div {
      display:flex;
      padding: 5px;
      margin: 10px 20px;
    }

    .register-form .form-item {
      width: 130px;
      padding: 5px;
    }

    .register-form input {
      width: 350px;
      margin-right: 10px;
      height: 40px;
      border: 1px solid rgb(221, 221, 221);
      border-radius: 4px;
      padding: 0px 11px 0px 15px;
    }

    .register-form .check-btn{
      width: 80px;
      height: 40px;
      border-radius: 4px;
      border: 1px solid gray;
    }

    .register-form .form-div-btn  {
     display:flex;
     justify-content: center;
    }

    .register-form .guide-p {
      font-size: 13px;
      color: red;
      padding: 10px 0;
      margin: 0;
    }

  </style>
  <!-- bootstrap cdn -->
  <!-- CSS only -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">

  <!-- axios CDN -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>

  <div class="register-div">
    <div>회원가입</div>
  </div>
  <form class="register-form" name="register-form">
    <p class="form-required">* 필수입력사항</p>
    <hr>
    <fieldset>
      <div class="form-div">
        <p class="form-item">프로필 사진</p>
        <input type="file" name="dynamicFile" id="dynamicFile">
        <button type="button" onclick="fileUpload();">업로드</button>
        <img src="" alt="">
      </div>
  
      <div class="form-div">
        <label for="userid" class="form-item">아이디</label>
        <div class="form-guide">
          <input type="text" name="userid" id="userid" placeholder="아이디를 입력해주세요" required onkeyup="idInputCheck(this, 10);">
          <p class="guide-p"></p>
        </div>
        <button type="button" class="check-btn">중복확인</button>
      </div>
      
      <div class="form-div">
        <label for="pw" class="form-item">비밀번호</label>
        <input type="password" name="pw"  id="pw" placeholder="비밀번호를 입력해주세요" required>
      </div>
  
      <div class="form-div">
        <label for="pw" class="form-item">비밀번호 확인</label>
        <input type="pw-confirm" id="pw-confirm" placeholder="비밀번호를 한번 더 입력해주세요" required>
      </div>

      <div class="form-div">
        <label for="nickname" class="form-item">닉네임</label>
        <input type="text" name="nickname" id="nickname" required onkeyup="charCheck(this, max);">
        <button type="button" class="check-btn">중복확인</button>
      </div>
  
      <div class="form-div">
        <label for="address" class="form-item">주소</label>
        <input type="text" name="address" id="address" required>
        <button type="button" class="check-btn">주소 검색</button>
      </div>
      <br>

      <div class="form-div-btn">
        <!-- 버튼 타입 button submit? -->
        <button type="button" onclick="register();" class="check-btn">가입하기</button>
      </div>
    </fieldset>
  </form>
  
  <script>


    async function register() {
        const form = document.forms['form_register'];

        // let check = overlapId();
        // console.log('ddd', check);
        // if (check){ // !false -> 중복 검사 불통과 -> 종료
        //   alert('중복검사를 다시 해주세요!');
        //   return;
        // }


        if (!form.checkValidity()) {
          form.reportValidity();
          return;
        }

        axios({
          method: 'POST',
          url: '/register',
          data: {
            userid: form.userid.value,
            pw: form.pw.value,
            name: form.name.value,
          },
        })
          .then((res) => {
            return res.data;
          })
          .then((data) => {
            // (1) alert 띄우기
            alert('회원가입 성공');
            // (2) 가입 성공시 로그인 페이지로 이동
            // document.location.href란?
            // javascript에서 페이지 이동할 수 있는 방법
            // document 객체를 사용하기 때문에 프론트에서 사용 가능
            document.location.href = '/user/signin';
          });

    let useridInput = document.querySelector('#userid');
    let useridGuide = document.querySelector('.guide-p');

    function charCheck(obj) {
      // 특수문자 판별
      var specialChar = /[ \{\}\[\]\/?.,;:|\)*~`!^\-_+┼<>@\#$%&\'\"\\\(\=]/gi;
      
      // 배열에서 하나씩 값을 비교
      if(specialChar.test(obj.value)) {
        // 값이 일치하면 문자를 삭제
        obj.value = obj.value.substring( 0 , obj.value.length -1 );
      }
    };

    // maxlength 넘었을 때 텍스트를 잘라서 value값에 넣어줌
    function handleInputLength(el, max) {
      if(el.value.length > max) {
        el.value = el.value.substr(0, max);
      }
    };

    function idInputCheck(obj, max) {
      charCheck(obj);
      handleInputLength(obj, max);
      // 조건을 만족하지 않으면 가이드 보임 
      
      if (useridInput.value.length = 0 || useridInput.value.length < 5) {
        useridGuide.innerText = '아이디는 5 - 10자로 만들어주세요'
        // 6자 이상 16자 이하로 특수문자 제외
      } else {
        useridGuide.innerText = ''
      }
    };

    function fileUpload() {
        console.log('click fileUpload')

        // 멀티미디어 데이터는 비동기 데이터를 보여줄 때 폼 데이터를 만들어서 함
        const formData = new FormData(); // 폼 객체 생성
        const file = document.getElementById('dynamicFile'); // file input

        console.dir(file); // 파일 imput
        console.dir(file.files[0]); // 파일 input에 들어간 파일 정보

        // formData.append(name, value);
        // input의 name과 input의 value
        formData.append('dynamicFile', file.files[0])

        // axios 통신
        axios ({
          method: 'POST',
          url: '/dynamicFile',
          data: formData,
          headers: {
            'Content-Type': 'multipart/form-data', // enctype: "multipart/form-data"
          },
        }).then(function (res) {
          // res : 클라이언트의 POST /dynamicFile 요청을 보낸 응답 결과
          console.log(res);
          console.log(res.data);
          console.log(res.data.path);
          document.querySelector('img').src = res.data.path;
        })
      }

    function register() {
      const form = document.forms['register-form'];
      console.log(form)

      axios({
        method: 'POST',
        url: '/signup',
        data: {
          profile: document.querySelector('img').src,
          userid: form.userid.value,
          pw: form.pw.value,
          name: form.name.value,
          nickname: form.nickname.value,
          address: form.address.value,
        },
      })
        .then((res) => {
          console.log(res);
          console.log(res.data);
          return res.data;
        })
        .then((data) => {
          // (1) alert 띄우기
          alert('회원가입 성공');
          // (2) 가입 성공시 로그인 페이지로 이동
          // document.location.href란?
          // javascript에서 페이지 이동할 수 있는 방법
          // document 객체를 사용하기 때문에 프론트에서 사용 가능
          document.location.href = '/';
        });

      }
  </script>
</body>
</html>